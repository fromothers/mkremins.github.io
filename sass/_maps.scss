@function map-create($pairs...) {
	$map: ();
	@each $pair in $pairs {
		// using the following instead of append($map, $pair) prevents duplicate keys
		$key: map-pair-key($pair);
		$value: map-pair-value($pair);
		$map: map-set($map, $key, $value);
	}
	@return $map;
}

@function map-get($map, $key) {
	$key-index: map-key-index($map, $key);
	$pair: nth($map, $key-index);
	$value: map-pair-value($pair);
	@return $value;
}

@function map-set($map, $key, $value) {
	$map: map-remove($map, $key); // prevent duplicate keys
	$pair: map-wrap-pair($key, $value);
	$map: append($map, $pair);
	@return $map;
}

@function map-remove($map, $key) {
	@if map-contains-key($map, $key) { // only need to modify map if key is present
		$key-index: map-key-index($map, $key);
		$map-copy: ();
		@for $n from 1 through length($map) {
			@if $n != $key-index {
				$pair: nth($map, $n);
				$map-copy: append($map-copy, $pair);
			}
		}
		$map: $map-copy;
	}
	@return $map;
}

@function map-merge($map1, $map2) {
	$pairs: $map1;
	@each $pair in $map2 {
		$pairs: append($pairs, $pair);
	}
	@return map-create($pairs);
}

@function map-contains-key($map, $key) {
	$key-index: map-key-index($map, $key);
	@return $key-index > 0;
}

@function map-keys($map) {
	$keys: ();
	@each $pair in $map {
		$key: map-pair-key($pair);
		$keys: append($keys, $key);
	}
	@return $keys;
}

@function map-values($map) {
	$values: ();
	@each $pair in $map {
		$value: map-pair-value($pair);
		$values: append($values, $value);
	}
	@return $values;
}

@function map-pair-key($pair) {
	@return nth($pair, 1);
}

@function map-pair-value($pair) {
	$value: ();
	@for $n from 2 through length($pair) {
		$partial-value: nth($pair, $n);
		$value: append($value, $partial-value);
	}
	@return $value;
}

// not intended for external use
@function map-key-index($map, $key) {
	@for $n from 1 through length($map) {
		$pair: nth($map, $n);
		$pair-key: map-pair-key($pair);
		@if $pair-key == $key {
			@return $n;
		}
	}
	@return 0; // not a valid index; signifies absence of key from map
}

// not intended for external use
@function map-wrap-pair($key, $value) {
	@return join($key, $value);
}
